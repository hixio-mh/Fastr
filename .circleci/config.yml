aliases:
    - &container_config
        docker:
            - image: "circleci/node:latest"
        working_directory: ~/fast-dna

    - &lerna_install
        run: 
            name: Install Lerna
            command: |
                sudo yarn global add lerna@3.18.2
version: 2
jobs:
    build_dependencies:
        <<: *container_config
        steps:
            - *lerna_install
            - checkout
            - restore_cache:
                name: Restore Yarn Package Cache
                keys:
                    - yarn-packages-{{ checksum "yarn.lock" }}
            - run: 
                name: Install package dependencies
                command: |
                    yarn install --frozen-lockfile
            - run: 
                name: Build yarn workspaces
                command: |
                    lerna run prepare
            - run: 
                name: Ensure prettier formatting
                command: |
                    lerna run prettier:diff
            - run: 
                name: Run unit tests
                command: |
                    lerna run test --stream
                no_output_timeout: 20m
            - persist_to_workspace:
                root: ~/fast-dna
                paths:
                    - coverage
                    - packages/**/coverage

    test_coverage:
        <<: *container_config
        steps:
            - checkout
            - attach_workspace:
                at: ~/fast-dna
            - run:
                name: Setup and execute Code Climate reporter
                command: |
                    if [ ! -f ./coverage/cc-test-reporter ]; then
                      mkdir -p coverage/
                      curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./coverage/cc-test-reporter
                      chmod +x ./coverage/cc-test-reporter
                    fi
            - run:
                name: Notify Code Climate that a build is starting
                command: |
                    ./coverage/cc-test-reporter before-build
            - run:
                name: Collect coverage reports
                command: |
                    for f in packages/*; do
                      if [ -d "$f" ]; then
                        echo $
                        set +e
                        if [ -d "$f/coverage" ]; then
                          ./coverage/cc-test-reporter format-coverage -t lcov -o coverage/coverage.${f//\//-}.json $f/coverage/lcov.info
                        fi
                      fi
                    done;
            - run:
                name: Summarize and upload code coverage
                command: |
                    ./coverage/cc-test-reporter sum-coverage -o coverage/coverage.total.json coverage/coverage.*.json
                    ./coverage/cc-test-reporter upload-coverage -i coverage/coverage.total.json

workflows:
  version: 2
  build_test_coverage:
    jobs:
      - build_dependencies
      - test_coverage:
          requires: 
            - build_dependencies

